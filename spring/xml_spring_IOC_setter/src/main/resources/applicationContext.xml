<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
         xmlns:aop="http://www.springframework.org/schema/aop"  
         xmlns:tx="http://www.springframework.org/schema/tx"  
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd  
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">  
  
    <!-- id是唯一性标识，不能重-->  
    <!--  相当于工厂一样-->  
    <bean id="userDao4Mysql"  class="ServiceDAOImpl.UserDAOMysqlImpl"></bean>  
    <bean id="userDao4Oracle"  class="ServiceDAOImpl.UserDAOracleImpl"></bean>  
    <!-- userManager使用userDao接口，userDao使用构造函数将依赖关系给userManager-->  
    <!-- userManager依赖哪写dao，IoC容器不仅是一个工厂，它提供了管理依赖的能力。 
     -->  
    <bean id="userManager" class="manager.UserManagerImpl">  
        <!-- 使用的构造函数，描述了一个种依赖关系。userManager依赖于Mysql的实现  
        容器提供了查找能力，找到之后new好，之后会给userManager，放到userManager的过程  
        为DI，依赖注入。（主动注入）-->  
        <property name="userDao" ref="userDao4Mysql"></property>
        <!--或  
        <constructor-arg ref="userDao4Oracle"></constructor-arg>  
        -->  
           
    </bean>  
</beans>  